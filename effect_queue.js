// Generated by CoffeeScript 1.3.1
(function() {
  var root;

  root = typeof exports !== "undefined" && exports !== null ? exports : this;

  root.EffectQueue = (function() {

    EffectQueue.name = 'EffectQueue';

    function EffectQueue(jobs) {
      this.jobs = jobs != null ? jobs : [];
      this.deferred = new $.Deferred();
    }

    EffectQueue.prototype.enqueue = function(job) {
      return this.jobs.push(job);
    };

    EffectQueue.prototype.flush = function() {
      var job, object;
      if (this.deferred.isResolved()) {
        this.deferred = new $.Deferred();
      }
      if (this.jobs.length === 0) {
        this.deferred.resolve();
      } else {
        object = this;
        if (typeof this.jobs[0] === "function") {
          job = this.jobs.shift(1);
          $.when(job()).then(function() {
            return object.flush();
          });
        } else if (this.jobs[0] instanceof Array) {
          $.when.apply($, ((function() {
            var _i, _len, _ref, _results;
            _ref = this.jobs.shift(1);
            _results = [];
            for (_i = 0, _len = _ref.length; _i < _len; _i++) {
              job = _ref[_i];
              _results.push(job());
            }
            return _results;
          }).call(this))).then(function() {
            return object.flush();
          });
        } else {
          this.jobs.shift(1);
          this.flush();
        }
      }
      return this.deferred.promise();
    };

    return EffectQueue;

  })();

}).call(this);
